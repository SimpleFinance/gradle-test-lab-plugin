import com.simple.gradle.testlab.model.Orientation
import com.simple.gradle.testlab.model.TestSize

plugins {
    id 'com.android.application' version '4.1.0'
    id 'com.simple.gradle.testlab'
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdkVersion 23
        versionCode 1
        versionName "0.1"
    }

    splits {
        density {
            enable true
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }
}

repositories {
    google()
    jcenter()
}

dependencies {
    androidTestImplementation 'androidx.test:core:1.0.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
}

testLab {
    googleApi {
        bucketName = "my-bucket-name"
        serviceCredentials = file("/path/to/service/credentials.json")
        projectId = "my-project-id-12345"
    }

    tests {
        instrumentation("instrumented") {
            environmentVariables["key"] = "value"
            testRunnerClass = "com.example.test.MyTestRunner"
            targets {
                packages = ["com.my.package.name", "!com.my.package.other"]
                classes = ["com.foo.ClassName", "!com.foo.OtherClass"]
                annotations = ["com.foo.AnnotationToRun", "!com.foo.AnnotationToSkip"]
                includeFile = "/data/local/tmp/include.txt"
                excludeFile = "/data/local/tmp/exclude.txt"
                regex = $/^com\.package\.(MyClass|OtherClass)#test.+/$
                size = TestSize.LARGE
                shardCount = 10
                shard {
                    packages = ["com.my.package.name", "!com.my.package.other"]
                    classes = ["com.foo.ClassName", "!com.foo.OtherClass"]
                    annotations = ["com.foo.AnnotationToRun", "!com.foo.AnnotationToSkip"]
                    includeFile = "/data/local/tmp/include.txt"
                    excludeFile = "/data/local/tmp/exclude.txt"
                    regex = $/^com\.package\.(MyClass|OtherClass)#test.+/$
                    size = TestSize.LARGE
                }
            }
            artifacts {
                all()
                instrumentation = true
                junit = true
                logcat = true
                video = true
            }
            additionalApks.from(
                    "/path/to/some.apk",
                    "/path/to/another.apk"
            )
            disablePerformanceMetrics = true
            disableVideoRecording = true
            dontAutograntPermissions = true
            resultsHistoryName = provider {
                def prNumber = "1234"
                "GitHub PR $prNumber"
            }
            testTimeout = "600s"
            directoriesToPull.addAll(
                    "/sdcard/path/to/dir",
                    "/data/local/tmp/path/to/dir"
            )
            networkProfile = "LTE"
            device {
                model = "hammerhead"
                api = 21
                locale = "en"
                orientation = Orientation.PORTRAIT
            }
            systrace {
                enabled = true
                durationSeconds = 30
            }
        }

        robo("foo") {
            appInitialActivity = "com.example.app.MainActivity"
            maxDepth = 50
            maxSteps = 200

            artifacts {
                all()
                logcat = true
                screenshots = true
                video = true
            }

            directives {
                click("login_button")
                text("username", "alice")
            }

            script = file("script.robo")

            startingIntents {
                launcherActivity()
                launcherActivity {
                    timeout = 10
                }
                startActivity {
                    action = "android.intent.action.VIEW"
                    categories = ["android.intent.category.TEST"]
                    uri = "https://www.example.com"
                    timeout = 20
                }
            }

            additionalApks.from(
                    "/path/to/some.apk",
                    "/path/to/another.apk"
            )
            disablePerformanceMetrics = true
            disableVideoRecording = true
            dontAutograntPermissions = true
            resultsHistoryName = provider {
                def prNumber = "1234"
                "GitHub PR $prNumber"
            }
            testTimeout = "600s"
            account.googleAuto()
            directoriesToPull.addAll(
                    "/sdcard/path/to/dir",
                    "/data/local/tmp/path/to/dir"
            )
            networkProfile = "LTE"
            device {
                model = "hammerhead"
                api = 21
                locale = "en"
                orientation = Orientation.PORTRAIT
            }
            systrace {
                enabled = true
                durationSeconds = 30
            }
        }
    }
}

wrapper {
    gradleVersion = "6.6.1"
}
